name: Resume Deployment

on:
  workflow_dispatch:
    inputs:
      run_id:
        description: 'The ID of the original workflow run'
        required: true
      comments:
        description: 'Comments about the deployment'
        required: false
        default: 'Approved after review'
      approval_status:
        description: 'Approval status'
        required: true
        default: 'approved'
        type: choice
        options:
          - approved
          - rejected

jobs:
  process-approval:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create approval status directory
        run: mkdir -p /tmp/workflow-data

      - name: Save approval status
        run: |
          echo "${{ github.event.inputs.approval_status }}" > /tmp/workflow-data/approval-status
          echo "${{ github.event.inputs.comments }}" > /tmp/workflow-data/approval-comments

      - name: Upload approval status
        uses: actions/upload-artifact@v4
        with:
          name: approval-status
          path: /tmp/workflow-data/approval-status
          retention-days: 1

      - name: Upload approval comments
        uses: actions/upload-artifact@v4
        with:
          name: approval-comments
          path: /tmp/workflow-data/approval-comments
          retention-days: 1

      - name: Log approval information
        run: |
          echo "## Approval Information" >> $GITHUB_STEP_SUMMARY
          echo "* Status: ${{ github.event.inputs.approval_status }}" >> $GITHUB_STEP_SUMMARY
          echo "* Comments: ${{ github.event.inputs.comments }}" >> $GITHUB_STEP_SUMMARY
          echo "* Original Run ID: ${{ github.event.inputs.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "* Approved by: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY

  deploy:
    needs: process-approval
    runs-on: ubuntu-latest
    if: github.event.inputs.approval_status == 'approved'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact from original workflow
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci-cd.yml
          run_id: ${{ github.event.inputs.run_id }}
          name: war-file
          path: target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy to production
        run: |
          echo "Deploying to production server after approval..."
          echo "Approval comments: ${{ github.event.inputs.comments }}"
          # In a real scenario, you would add deployment steps here
          # For example, using SSH to connect to your server and pull the latest Docker image
          # or updating a Kubernetes deployment

  notify-rejection:
    needs: process-approval
    runs-on: ubuntu-latest
    if: github.event.inputs.approval_status == 'rejected'
    
    steps:
      - name: Notify about rejection
        run: |
          echo "## Deployment Rejected" >> $GITHUB_STEP_SUMMARY
          echo "* Rejected by: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "* Rejection comments: ${{ github.event.inputs.comments }}" >> $GITHUB_STEP_SUMMARY
          echo "* Original Run ID: ${{ github.event.inputs.run_id }}" >> $GITHUB_STEP_SUMMARY
          
          # In a real scenario, you might want to send notifications
          # For example, sending an email or a Slack message
          echo "Deployment was rejected with comments: ${{ github.event.inputs.comments }}"